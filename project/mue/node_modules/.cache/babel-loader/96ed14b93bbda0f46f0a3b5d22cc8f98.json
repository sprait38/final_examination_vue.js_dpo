{"ast":null,"code":"export default {\n  emits: ['change-filters'],\n  props: ['filters'],\n\n  data() {\n    return {\n      currentPriceFrom: this.filters.filterPriceFrom,\n      currentPriceTo: this.filters.filterPriceTo,\n      currentCategoryId: this.filters.filterCategoryId,\n      currentColorId: this.filters.filterColorId,\n      currentMaterialId: this.filters.filterMaterialId,\n      currentSeasonId: this.filters.filterSeasonId\n    };\n  },\n\n  computed: {\n    colors() {\n      return this.$store.state.colorsData;\n    },\n\n    materials() {\n      return this.$store.state.materialsData;\n    },\n\n    seasons() {\n      return this.$store.state.seasonsData;\n    },\n\n    categories() {\n      return this.$store.state.categoriesData;\n    },\n\n    productFilters() {\n      return {\n        filterPriceFrom: this.currentPriceFrom,\n        filterPriceTo: this.currentPriceTo,\n        filterCategoryId: this.currentCategoryId,\n        filterColorId: this.currentColorId,\n        filterMaterialId: this.currentMaterialId,\n        filterSeasonId: this.currentSeasonId\n      };\n    },\n\n    isLoading() {\n      return this.$store.state.areFiltersLoading;\n    },\n\n    isLoadingFailed() {\n      return this.$store.state.areFiltersLoadingFailed;\n    },\n\n    isResetBtnVisible() {\n      return Object.values(this.filters).some(filter => filter.length !== undefined ? filter.length : filter);\n    }\n\n  },\n  methods: {\n    async loadFilters() {\n      this.$store.dispatch('loadFilters');\n    },\n\n    setFilters() {\n      this.$emit('change-filters', this.productFilters);\n    },\n\n    resetFilters() {\n      this.currentPriceFrom = 0;\n      this.currentPriceTo = 0;\n      this.currentCategoryId = 0;\n      this.currentColorId = [];\n      this.currentMaterialId = [];\n      this.currentSeasonId = [];\n      this.$router.replace({\n        'query': null\n      });\n      this.setFilters();\n    }\n\n  },\n\n  created() {\n    this.$store.dispatch('loadFilters');\n  }\n\n};","map":{"version":3,"mappings":"AAuFA,eAAe;AACbA,OAAK,EAAE,CAAC,gBAAD,CADM;AAEbC,OAAK,EAAE,CAAC,SAAD,CAFM;;AAGbC,MAAI,GAAG;AACL,WAAO;AACLC,sBAAgB,EAAE,KAAKC,OAAL,CAAaC,eAD1B;AAELC,oBAAc,EAAE,KAAKF,OAAL,CAAaG,aAFxB;AAGLC,uBAAiB,EAAE,KAAKJ,OAAL,CAAaK,gBAH3B;AAILC,oBAAc,EAAE,KAAKN,OAAL,CAAaO,aAJxB;AAKLC,uBAAiB,EAAE,KAAKR,OAAL,CAAaS,gBAL3B;AAMLC,qBAAe,EAAE,KAAKV,OAAL,CAAaW;AANzB,KAAP;AAQD,GAZY;;AAabC,UAAQ,EAAE;AACRC,UAAM,GAAG;AACP,aAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,UAAzB;AACD,KAHO;;AAIRC,aAAS,GAAG;AACV,aAAO,KAAKH,MAAL,CAAYC,KAAZ,CAAkBG,aAAzB;AACD,KANO;;AAORC,WAAO,GAAG;AACR,aAAO,KAAKL,MAAL,CAAYC,KAAZ,CAAkBK,WAAzB;AACD,KATO;;AAURC,cAAU,GAAG;AACX,aAAO,KAAKP,MAAL,CAAYC,KAAZ,CAAkBO,cAAzB;AACD,KAZO;;AAaRC,kBAAc,GAAG;AACf,aAAO;AACLtB,uBAAe,EAAE,KAAKF,gBADjB;AAELI,qBAAa,EAAE,KAAKD,cAFf;AAGLG,wBAAgB,EAAE,KAAKD,iBAHlB;AAILG,qBAAa,EAAE,KAAKD,cAJf;AAKLG,wBAAgB,EAAE,KAAKD,iBALlB;AAMLG,sBAAc,EAAE,KAAKD;AANhB,OAAP;AAQD,KAtBO;;AAuBRc,aAAS,GAAG;AACV,aAAO,KAAKV,MAAL,CAAYC,KAAZ,CAAkBU,iBAAzB;AACD,KAzBO;;AA0BRC,mBAAe,GAAG;AAChB,aAAO,KAAKZ,MAAL,CAAYC,KAAZ,CAAkBY,uBAAzB;AACD,KA5BO;;AA6BRC,qBAAiB,GAAG;AAClB,aAAOC,MAAM,CAACC,MAAP,CAAc,KAAK9B,OAAnB,EAA4B+B,IAA5B,CAAiCC,MAAK,IAAKA,MAAM,CAACC,MAAP,KAAkBC,SAAlB,GAA8BF,MAAM,CAACC,MAArC,GAA8CD,MAAzF,CAAP;AACF;;AA/BQ,GAbG;AA8CbG,SAAO,EAAE;AACP,UAAMC,WAAN,GAAoB;AAClB,WAAKtB,MAAL,CAAYuB,QAAZ,CAAqB,aAArB;AACD,KAHM;;AAIPC,cAAU,GAAG;AACX,WAAKC,KAAL,CAAW,gBAAX,EAA6B,KAAKhB,cAAlC;AACD,KANM;;AAOPiB,gBAAY,GAAG;AACb,WAAKzC,gBAAL,GAAwB,CAAxB;AACA,WAAKG,cAAL,GAAsB,CAAtB;AACA,WAAKE,iBAAL,GAAyB,CAAzB;AACA,WAAKE,cAAL,GAAsB,EAAtB;AACA,WAAKE,iBAAL,GAAyB,EAAzB;AACA,WAAKE,eAAL,GAAuB,EAAvB;AACA,WAAK+B,OAAL,CAAaC,OAAb,CAAqB;AAAC,iBAAS;AAAV,OAArB;AACA,WAAKJ,UAAL;AACF;;AAhBO,GA9CI;;AAgEbK,SAAO,GAAG;AACR,SAAK7B,MAAL,CAAYuB,QAAZ,CAAqB,aAArB;AACF;;AAlEa,CAAf","names":["emits","props","data","currentPriceFrom","filters","filterPriceFrom","currentPriceTo","filterPriceTo","currentCategoryId","filterCategoryId","currentColorId","filterColorId","currentMaterialId","filterMaterialId","currentSeasonId","filterSeasonId","computed","colors","$store","state","colorsData","materials","materialsData","seasons","seasonsData","categories","categoriesData","productFilters","isLoading","areFiltersLoading","isLoadingFailed","areFiltersLoadingFailed","isResetBtnVisible","Object","values","some","filter","length","undefined","methods","loadFilters","dispatch","setFilters","$emit","resetFilters","$router","replace","created"],"sourceRoot":"","sources":["D:\\задание\\final_examination_vue.js_dpo\\project\\mue\\src\\components\\ProductsFilter.vue"],"sourcesContent":["<template>\r\n  <aside class=\"filter\" v-if=\"isLoading\">\r\n    <div class=\"loader-wrapper\">\r\n      <base-loader></base-loader>\r\n    </div>\r\n  </aside>\r\n  <aside class=\"filter\" v-else-if=\"isLoadingFailed\">\r\n    <h2>Произошла ошибка при загрузке фильтров! Попробуйте перезагрузить страницу.</h2>\r\n  </aside>\r\n  <aside class=\"filter\" v-else>\r\n    <form class=\"filter__form form\" action=\"#\" method=\"get\" @submit.prevent=\"setFilters\">\r\n      <fieldset class=\"form__block\">\r\n        <legend class=\"form__legend\">Цена</legend>\r\n        <label class=\"form__label form__label--price\">\r\n          <input class=\"form__input\" type=\"text\" name=\"min-price\" v-model.number=\"currentPriceFrom\">\r\n          <span class=\"form__value\">От</span>\r\n        </label>\r\n        <label class=\"form__label form__label--price\">\r\n          <input class=\"form__input\" type=\"text\" name=\"max-price\" v-model.number=\"currentPriceTo\">\r\n          <span class=\"form__value\">До</span>\r\n        </label>\r\n      </fieldset>\r\n\r\n      <fieldset class=\"form__block\">\r\n        <legend class=\"form__legend\">Категория</legend>\r\n        <label class=\"form__label form__label--select\">\r\n          <select class=\"form__select\" type=\"text\" name=\"category\" v-model=\"currentCategoryId\">\r\n            <option value=\"0\">Все категории</option>\r\n            <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">{{ category.title }}</option>\r\n          </select>\r\n        </label>\r\n      </fieldset>\r\n\r\n      <fieldset class=\"form__block\">\r\n        <legend class=\"form__legend\">Цвет</legend>\r\n        <ul class=\"colors colors--black\">\r\n          <li class=\"colors__item\" v-for=\"color in colors\" :key=\"color.id\">\r\n            <label class=\"colors__label\">\r\n              <input class=\"colors__radio sr-only\" type=\"checkbox\" name=\"color\" :value=\"color.id\" v-model=\"currentColorId\">\r\n              <span class=\"colors__value\" :style=\"{'background-color': color.code}\">\r\n              </span>\r\n            </label>\r\n          </li>\r\n        </ul>\r\n      </fieldset>\r\n\r\n      <fieldset class=\"form__block\">\r\n        <legend class=\"form__legend\">Материал</legend>\r\n        <ul class=\"check-list\">          \r\n          <li class=\"check-list__item\" v-for=\"material in materials\" :key=\"material.id\">\r\n            <label class=\"check-list__label\">\r\n              <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"material\" :value=\"material.id\" v-model=\"currentMaterialId\">\r\n              <span class=\"check-list__desc\">\r\n                {{ material.title }} \r\n                <span>({{ material.productsCount }})</span>\r\n              </span>\r\n            </label>\r\n          </li>\r\n        </ul>\r\n      </fieldset>\r\n\r\n      <fieldset class=\"form__block\">\r\n        <legend class=\"form__legend\">Коллекция</legend>\r\n        <ul class=\"check-list\">\r\n          <li class=\"check-list__item\" v-for=\"season in seasons\" :key=\"season.id\">\r\n            <label class=\"check-list__label\">\r\n              <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"collection\" :value=\"season.id\" v-model=\"currentSeasonId\">\r\n              <span class=\"check-list__desc\">\r\n                {{ season.title }} \r\n                <span>({{ season.productsCount }})</span>\r\n              </span>\r\n            </label>\r\n          </li>\r\n        </ul>\r\n      </fieldset>\r\n\r\n      <button class=\"filter__submit button button--primery\" type=\"submit\">\r\n        Применить\r\n      </button>\r\n      <button class=\"filter__reset button button--second\" type=\"button\" @click=\"resetFilters\" v-if=\"isResetBtnVisible\">\r\n        Сбросить\r\n      </button>\r\n    </form>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  emits: ['change-filters'],\r\n  props: ['filters'],\r\n  data() {\r\n    return {\r\n      currentPriceFrom: this.filters.filterPriceFrom,\r\n      currentPriceTo: this.filters.filterPriceTo,\r\n      currentCategoryId: this.filters.filterCategoryId,\r\n      currentColorId: this.filters.filterColorId,\r\n      currentMaterialId: this.filters.filterMaterialId,\r\n      currentSeasonId: this.filters.filterSeasonId\r\n    }\r\n  },\r\n  computed: {\r\n    colors() {\r\n      return this.$store.state.colorsData;\r\n    },\r\n    materials() {\r\n      return this.$store.state.materialsData;\r\n    },\r\n    seasons() {\r\n      return this.$store.state.seasonsData;\r\n    },\r\n    categories() {\r\n      return this.$store.state.categoriesData;\r\n    },\r\n    productFilters() {\r\n      return {\r\n        filterPriceFrom: this.currentPriceFrom,\r\n        filterPriceTo: this.currentPriceTo,\r\n        filterCategoryId: this.currentCategoryId,\r\n        filterColorId: this.currentColorId,\r\n        filterMaterialId: this.currentMaterialId,\r\n        filterSeasonId: this.currentSeasonId\r\n      }\r\n    },\r\n    isLoading() {\r\n      return this.$store.state.areFiltersLoading;\r\n    },\r\n    isLoadingFailed() {\r\n      return this.$store.state.areFiltersLoadingFailed;\r\n    },\r\n    isResetBtnVisible() {\r\n      return Object.values(this.filters).some(filter => filter.length !== undefined ? filter.length : filter);\r\n    }\r\n  },\r\n  methods: {\r\n    async loadFilters() {\r\n      this.$store.dispatch('loadFilters');\r\n    },\r\n    setFilters() {\r\n      this.$emit('change-filters', this.productFilters);\r\n    },\r\n    resetFilters() {\r\n      this.currentPriceFrom = 0;\r\n      this.currentPriceTo = 0;\r\n      this.currentCategoryId = 0;\r\n      this.currentColorId = [];\r\n      this.currentMaterialId = [];\r\n      this.currentSeasonId = [];\r\n      this.$router.replace({'query': null});\r\n      this.setFilters();\r\n    }\r\n  },\r\n  created() {\r\n    this.$store.dispatch('loadFilters');\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}
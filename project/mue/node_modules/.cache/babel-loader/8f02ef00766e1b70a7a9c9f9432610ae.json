{"ast":null,"code":"export default {\n  setProducts(state, payload) {\n    state.productsData = payload;\n  },\n\n  setProductData(state, payload) {\n    state.productData = payload;\n  },\n\n  setCategories(state, payload) {\n    state.categoriesData = payload;\n  },\n\n  setColors(state, payload) {\n    state.colorsData = payload;\n  },\n\n  setMaterials(state, payload) {\n    state.materialsData = payload;\n  },\n\n  setSeasons(state, payload) {\n    state.seasonsData = payload;\n  },\n\n  setDeliveries(state, payload) {\n    state.deliveriesData = payload;\n  },\n\n  setPayments(state, payload) {\n    state.paymentsData = payload;\n  },\n\n  updateAccessKey(state, payload) {\n    state.userAccessKey = payload;\n  },\n\n  syncCartProducts(state) {\n    state.cartData = state.cartProductsData.map(item => ({\n      productId: item.product.id,\n      quantity: item.quantity\n    }));\n  },\n\n  updateCart(state, payload) {\n    state.cartProductsData = payload;\n  },\n\n  updateCartProductQuantity(state, payload) {\n    const item = state.cartData.find(cartItem => cartItem.productId === payload.productId);\n    if (item) item.quantity = payload.quantity;\n  },\n\n  deleteCartProduct(state, payload) {\n    state.cartData = state.cartData.filter(item => item.productId !== payload.productId);\n  },\n\n  resetCart(state) {\n    state.cartProductsData = [];\n    state.cartData = [];\n  },\n\n  updateOrderInfo(state, payload) {\n    state.orderInfo = payload;\n  },\n\n  updateOrderError(state, payload) {\n    state.orderErrorInfo = payload;\n  },\n\n  resetOrderError(state) {\n    state.orderErrorInfo = null;\n  },\n\n  resetFormErrorMessage(state) {\n    state.formErrorMessage = null;\n  },\n\n  updateOrderErrorMessage(state, payload) {\n    state.orderErrorMessage = payload;\n  }\n\n};","map":{"version":3,"sources":["D:/задание/final_examination_vue.js_dpo/project/mue/src/store/mutations.js"],"names":["setProducts","state","payload","productsData","setProductData","productData","setCategories","categoriesData","setColors","colorsData","setMaterials","materialsData","setSeasons","seasonsData","setDeliveries","deliveriesData","setPayments","paymentsData","updateAccessKey","userAccessKey","syncCartProducts","cartData","cartProductsData","map","item","productId","product","id","quantity","updateCart","updateCartProductQuantity","find","cartItem","deleteCartProduct","filter","resetCart","updateOrderInfo","orderInfo","updateOrderError","orderErrorInfo","resetOrderError","resetFormErrorMessage","formErrorMessage","updateOrderErrorMessage","orderErrorMessage"],"mappings":"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","sourcesContent":["export default {\r\n  setProducts(state, payload) {\r\n    state.productsData = payload;\r\n  },\r\n  setProductData(state, payload) {\r\n    state.productData = payload;\r\n  },\r\n  setCategories(state, payload) {\r\n    state.categoriesData = payload;\r\n  },\r\n  setColors(state, payload) {\r\n    state.colorsData = payload;\r\n  },\r\n  setMaterials(state, payload) {\r\n    state.materialsData = payload;\r\n  },\r\n  setSeasons(state, payload) {\r\n    state.seasonsData = payload;\r\n  },\r\n  setDeliveries(state, payload) {\r\n    state.deliveriesData = payload;\r\n  },\r\n  setPayments(state, payload) {\r\n    state.paymentsData = payload;\r\n  },\r\n  updateAccessKey(state, payload) {\r\n    state.userAccessKey = payload;\r\n  },\r\n  syncCartProducts(state) {\r\n    state.cartData = state.cartProductsData.map((item) => ({\r\n      productId: item.product.id,\r\n      quantity: item.quantity\r\n    }));\r\n  },\r\n  updateCart(state, payload) {\r\n    state.cartProductsData = payload;\r\n  },\r\n  updateCartProductQuantity(state, payload) {\r\n    const item = state.cartData.find((cartItem) => cartItem.productId === payload.productId);\r\n    if (item) item.quantity = payload.quantity;\r\n  },\r\n  deleteCartProduct(state, payload) {\r\n    state.cartData = state.cartData.filter((item) => item.productId !== payload.productId);\r\n  },\r\n  resetCart(state) {\r\n    state.cartProductsData = [];\r\n    state.cartData = [];\r\n  },\r\n  updateOrderInfo(state, payload) {\r\n    state.orderInfo = payload;\r\n  },\r\n  updateOrderError(state, payload) {\r\n    state.orderErrorInfo = payload;\r\n  },\r\n  resetOrderError(state) {\r\n    state.orderErrorInfo = null;\r\n  },\r\n  resetFormErrorMessage(state) {\r\n    state.formErrorMessage = null;\r\n  },\r\n  updateOrderErrorMessage(state, payload) {\r\n    state.orderErrorMessage = payload;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
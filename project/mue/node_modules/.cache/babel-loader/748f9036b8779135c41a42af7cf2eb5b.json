{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '@/config.js';\nimport BaseItemCounter from '@/components/BaseItemCounter.vue';\nexport default {\n  components: {\n    BaseItemCounter\n  },\n  props: ['title', 'img', 'basketItemId', 'itemId', 'colorCode', 'colorTitle', 'price', 'amount', 'size'],\n\n  data() {\n    return {\n      isSending: false,\n      isSendingFailed: false\n    };\n  },\n\n  computed: {\n    productAmount: {\n      get() {\n        return this.amount;\n      },\n\n      async set(val) {\n        this.isSendingFailed = false;\n        this.$store.commit('updateCartProductQuantity', {\n          productId: this.itemId,\n          quantity: val\n        });\n\n        try {\n          const {\n            data\n          } = await axios.put(`${API_URL}/baskets/products`, {\n            basketItemId: this.basketItemId,\n            quantity: val\n          }, {\n            params: {\n              userAccessKey: this.$store.state.userAccessKey\n            }\n          });\n          this.$store.commit('updateCart', data.items);\n        } catch (err) {\n          this.isSendingFailed = true;\n          this.$store.commit('syncCartProducts');\n        }\n      }\n\n    }\n  },\n  methods: {\n    setItemAmount(val) {\n      this.productAmount = val;\n    },\n\n    deleteItem() {\n      this.$store.dispatch('deleteFromCart', {\n        basketItemId: this.basketItemId,\n        productId: this.itemId\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4CA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AAEA,eAAe;AACbC,YAAU,EAAE;AAAED;AAAF,GADC;AAEbE,OAAK,EAAE,CAAC,OAAD,EAAU,KAAV,EAAiB,cAAjB,EAAiC,QAAjC,EAA2C,WAA3C,EAAwD,YAAxD,EAAsE,OAAtE,EAA+E,QAA/E,EAAyF,MAAzF,CAFM;;AAGbC,MAAI,GAAG;AACL,WAAO;AACLC,eAAS,EAAE,KADN;AAELC,qBAAe,EAAE;AAFZ,KAAP;AAID,GARY;;AASbC,UAAQ,EAAE;AACRC,iBAAa,EAAE;AACbC,SAAG,GAAG;AACJ,eAAO,KAAKC,MAAZ;AACD,OAHY;;AAIb,YAAMC,GAAN,CAAUC,GAAV,EAAe;AACb,aAAKN,eAAL,GAAuB,KAAvB;AACA,aAAKO,MAAL,CAAYC,MAAZ,CAAmB,2BAAnB,EAAgD;AAAEC,mBAAS,EAAE,KAAKC,MAAlB;AAA0BC,kBAAQ,EAAEL;AAApC,SAAhD;;AACA,YAAI;AACF,gBAAM;AAAER;AAAF,cAAW,MAAML,KAAK,CAACmB,GAAN,CAAW,GAAElB,OAAQ,mBAArB,EACrB;AAAEmB,wBAAY,EAAE,KAAKA,YAArB;AAAmCF,oBAAQ,EAAEL;AAA7C,WADqB,EAErB;AACEQ,kBAAM,EAAE;AAAEC,2BAAa,EAAE,KAAKR,MAAL,CAAYS,KAAZ,CAAkBD;AAAnC;AADV,WAFqB,CAAvB;AAKA,eAAKR,MAAL,CAAYC,MAAZ,CAAmB,YAAnB,EAAiCV,IAAI,CAACmB,KAAtC;AACF,SAPA,CAOE,OAAOC,GAAP,EAAY;AACZ,eAAKlB,eAAL,GAAuB,IAAvB;AACA,eAAKO,MAAL,CAAYC,MAAZ,CAAmB,kBAAnB;AACF;AACF;;AAlBa;AADP,GATG;AA+BbW,SAAO,EAAE;AACPC,iBAAa,CAACd,GAAD,EAAM;AACjB,WAAKJ,aAAL,GAAqBI,GAArB;AACD,KAHM;;AAIPe,cAAU,GAAG;AACX,WAAKd,MAAL,CAAYe,QAAZ,CAAqB,gBAArB,EAAuC;AAAET,oBAAY,EAAE,KAAKA,YAArB;AAAmCJ,iBAAS,EAAE,KAAKC;AAAnD,OAAvC;AACD;;AANM;AA/BI,CAAf","names":["axios","API_URL","BaseItemCounter","components","props","data","isSending","isSendingFailed","computed","productAmount","get","amount","set","val","$store","commit","productId","itemId","quantity","put","basketItemId","params","userAccessKey","state","items","err","methods","setItemAmount","deleteItem","dispatch"],"sourceRoot":"","sources":["D:\\задание\\final_examination_vue.js_dpo\\project\\mue\\src\\components\\CartItem.vue"],"sourcesContent":["<template>\r\n  <li class=\"cart__item product\">\r\n    <div class=\"product__pic\">\r\n      <img :src=\"img\" width=\"120\" height=\"120\" :alt=\"title\">\r\n    </div>\r\n    <h3 class=\"product__title\">\r\n      {{ title }}\r\n    </h3>\r\n    <p class=\"product__info product__info--color\">\r\n      Цвет:\r\n      <span>\r\n        <i :style=\"{ 'background-color': colorCode }\"></i>\r\n        {{ colorTitle }}\r\n      </span>\r\n    </p>\r\n    <span class=\"product__info product__info-size\">\r\n      Размер:\r\n      {{ size }}\r\n    </span>\r\n    <span class=\"product__code\">\r\n      Артикул: {{ itemId }}\r\n    </span>\r\n\r\n    <base-item-counter v-model=\"productAmount\" :itemAmount=\"amount\"\r\n      @change-item-amount=\"setItemAmount\"></base-item-counter>\r\n\r\n    <b class=\"product__price\">\r\n      {{ price * productAmount }} ₽\r\n    </b>\r\n\r\n    <div class=\"product__status\">\r\n      <span class=\"product__error\" v-if=\"isSendingFailed\">Что-то пошло не так. Попробуйте позже!</span>\r\n    </div>\r\n\r\n    <button class=\"product__del button-del\" type=\"button\" aria-label=\"Удалить товар из корзины\"\r\n      @click.prevent=\"deleteItem\">\r\n      <svg width=\"20\" height=\"20\" fill=\"currentColor\">\r\n        <use xlink:href=\"#icon-close\"></use>\r\n      </svg>\r\n    </button>\r\n  </li>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { API_URL } from '@/config.js';\r\nimport BaseItemCounter from '@/components/BaseItemCounter.vue';\r\n\r\nexport default {\r\n  components: { BaseItemCounter },\r\n  props: ['title', 'img', 'basketItemId', 'itemId', 'colorCode', 'colorTitle', 'price', 'amount', 'size'],\r\n  data() {\r\n    return {\r\n      isSending: false,\r\n      isSendingFailed: false,\r\n    }\r\n  },\r\n  computed: {\r\n    productAmount: {\r\n      get() {\r\n        return this.amount;\r\n      },\r\n      async set(val) {\r\n        this.isSendingFailed = false;\r\n        this.$store.commit('updateCartProductQuantity', { productId: this.itemId, quantity: val });\r\n        try {\r\n          const { data } = await axios.put(`${API_URL}/baskets/products`,\r\n            { basketItemId: this.basketItemId, quantity: val },\r\n            {\r\n              params: { userAccessKey: this.$store.state.userAccessKey }\r\n            });\r\n          this.$store.commit('updateCart', data.items);\r\n        } catch (err) {\r\n          this.isSendingFailed = true;\r\n          this.$store.commit('syncCartProducts');\r\n        }\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    setItemAmount(val) {\r\n      this.productAmount = val;\r\n    },\r\n    deleteItem() {\r\n      this.$store.dispatch('deleteFromCart', { basketItemId: this.basketItemId, productId: this.itemId });\r\n    },\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}
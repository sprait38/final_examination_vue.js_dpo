{"ast":null,"code":"import axios from 'axios';\nimport router from '@/router/index';\nimport { API_URL } from '@/config.js';\nexport default {\n  async loadProducts(context, payload) {\n    context.state.isLoading = true;\n    context.state.isLoadingFailed = false;\n\n    try {\n      const {\n        data\n      } = await axios.get(`${API_URL}/products`, {\n        params: payload\n      });\n      context.commit('setProducts', data);\n    } catch (err) {\n      context.state.isLoadingFailed = true;\n      context.state.isLoading = false;\n    } finally {\n      context.state.isLoading = false;\n    }\n  },\n\n  async loadFilters(context) {\n    context.state.areFiltersLoading = true;\n    context.state.areFiltersLoadingFailed = false;\n\n    try {\n      const categoriesData = await axios.get(`${API_URL}/productCategories`);\n      context.commit('setCategories', categoriesData.data.items);\n      const colorsData = await axios.get(`${API_URL}/colors`);\n      context.commit('setColors', colorsData.data.items);\n      const materialsData = await axios.get(`${API_URL}/materials`);\n      context.commit('setMaterials', materialsData.data.items);\n      const seasonsData = await axios.get(`${API_URL}/seasons`);\n      context.commit('setSeasons', seasonsData.data.items);\n    } catch (err) {\n      context.state.areFiltersLoadingFailed = true;\n    } finally {\n      context.state.areFiltersLoading = false;\n    }\n  },\n\n  async loadDeliveries(context) {\n    const {\n      data\n    } = await axios.get(`${API_URL}/deliveries`);\n    context.commit('setDeliveries', data);\n  },\n\n  async loadPayments(context, payload) {\n    context.state.isLoading = true;\n    context.state.isLoadingFailed = false;\n\n    try {\n      const {\n        data\n      } = await axios.get(`${API_URL}/payments`, {\n        params: payload\n      });\n      context.commit('setPayments', data);\n    } catch (err) {\n      context.state.isLoadingFailed = true;\n    } finally {\n      context.state.isLoading = false;\n    }\n  },\n\n  async addToCart(context, payload) {\n    context.state.isSending = true;\n    context.state.isSendingFailed = false;\n    context.state.isAdded = false;\n\n    try {\n      const {\n        data\n      } = await axios.post(`${API_URL}/baskets/products`, payload, {\n        params: {\n          userAccessKey: context.state.userAccessKey\n        }\n      });\n      context.commit('updateCart', data.items);\n      context.commit('syncCartProducts');\n    } catch (err) {\n      context.state.isSendingFailed = true;\n    }\n\n    context.state.isSending = false;\n    context.state.isAdded = true;\n  },\n\n  async loadCart(context) {\n    context.state.isCartLoading = true;\n    context.state.isCartLoadingFailed = false;\n\n    try {\n      const {\n        data\n      } = await axios.get(`${API_URL}/baskets`, {\n        params: {\n          userAccessKey: context.state.userAccessKey\n        }\n      });\n\n      if (!context.state.userAccessKey) {\n        localStorage.setItem('userAccessKey', data.user.accessKey);\n        context.commit('updateAccessKey', data.user.accessKey);\n      }\n\n      context.commit('updateCart', data.items);\n      context.commit('syncCartProducts');\n    } catch (err) {\n      context.state.isCartLoadingFailed = true;\n    } finally {\n      context.state.isCartLoading = false;\n    }\n  },\n\n  async deleteFromCart(context, payload) {\n    context.commit('deleteCartProduct', {\n      productId: payload.productId\n    });\n\n    try {\n      const {\n        data\n      } = await axios.delete(`${API_URL}/baskets/products`, {\n        params: {\n          userAccessKey: context.state.userAccessKey\n        },\n        data: payload\n      });\n      context.commit('updateCart', data.items);\n    } catch (err) {\n      context.commit('syncCartProducts');\n    }\n  },\n\n  async sendOrder(context, payload) {\n    context.state.isSending = true;\n    context.state.isSendingFailed = false;\n\n    try {\n      context.commit('resetOrderError');\n      context.commit('resetFormErrorMessage');\n      const {\n        data\n      } = await axios.post(`${API_URL}/orders`, payload, {\n        params: {\n          userAccessKey: context.state.userAccessKey\n        }\n      });\n      context.commit('updateOrderInfo', data);\n      context.commit('resetCart');\n      router.push({\n        name: 'orderInfo',\n        params: {\n          id: data.id\n        }\n      });\n    } catch (err) {\n      context.state.isSendingFailed = true;\n      context.commit('updateOrderError', err.response.data.error.request);\n      context.commit('updateOrderErrorMessage', err.response.data.error.message);\n    } finally {\n      context.state.isSending = false;\n    }\n  },\n\n  async loadOrderInfo(context, payload) {\n    context.state.isLoading = true;\n    context.state.isLoadingFailed = false;\n\n    try {\n      const {\n        data\n      } = await axios.get(`${API_URL}/orders/${payload}`, {\n        params: {\n          userAccessKey: context.state.userAccessKey\n        }\n      });\n      context.commit('updateOrderInfo', data);\n    } catch (err) {\n      context.state.isLoadingFailed = true;\n    } finally {\n      context.state.isLoading = false;\n    }\n  }\n\n};","map":{"version":3,"sources":["D:/задание/final_examination_vue.js_dpo/project/mue/src/store/actions.js"],"names":["axios","router","API_URL","loadProducts","context","payload","state","isLoading","isLoadingFailed","data","get","params","commit","err","loadFilters","areFiltersLoading","areFiltersLoadingFailed","categoriesData","items","colorsData","materialsData","seasonsData","loadDeliveries","loadPayments","addToCart","isSending","isSendingFailed","isAdded","post","userAccessKey","loadCart","isCartLoading","isCartLoadingFailed","localStorage","setItem","user","accessKey","deleteFromCart","productId","delete","sendOrder","push","name","id","response","error","request","message","loadOrderInfo"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport router from '@/router/index';\r\nimport { API_URL } from '@/config.js';\r\n\r\nexport default {\r\n  async loadProducts(context, payload) {\r\n    context.state.isLoading = true;\r\n    context.state.isLoadingFailed = false;\r\n    try {\r\n      const { data } = await axios.get(`${API_URL}/products`, { params: payload });\r\n      context.commit('setProducts', data);\r\n    } catch(err) {\r\n      context.state.isLoadingFailed = true;\r\n      context.state.isLoading = false;\r\n    } finally {\r\n      context.state.isLoading = false;\r\n    }\r\n  },\r\n  async loadFilters(context) {\r\n    context.state.areFiltersLoading = true;\r\n    context.state.areFiltersLoadingFailed = false;\r\n    try {\r\n      const categoriesData = await axios.get(`${ API_URL }/productCategories`);\r\n      context.commit('setCategories', categoriesData.data.items);\r\n      const colorsData = await axios.get(`${ API_URL }/colors`);\r\n      context.commit('setColors', colorsData.data.items);\r\n      const materialsData = await axios.get(`${ API_URL }/materials`);\r\n      context.commit('setMaterials', materialsData.data.items);\r\n      const seasonsData = await axios.get(`${ API_URL }/seasons`);\r\n      context.commit('setSeasons', seasonsData.data.items);\r\n    } catch(err) {\r\n      context.state.areFiltersLoadingFailed = true;\r\n    } finally {\r\n      context.state.areFiltersLoading = false;\r\n    }\r\n  },\r\n  async loadDeliveries(context) {\r\n    const { data } = await axios.get(`${ API_URL }/deliveries`);\r\n    context.commit('setDeliveries', data);\r\n  },\r\n  async loadPayments(context, payload) {\r\n    context.state.isLoading = true;\r\n    context.state.isLoadingFailed = false;\r\n    try {\r\n      const { data } = await axios.get(`${ API_URL }/payments`, { params: payload });\r\n      context.commit('setPayments', data);\r\n    } catch(err) {\r\n      context.state.isLoadingFailed = true;\r\n    } finally {\r\n      context.state.isLoading = false;\r\n    }\r\n  },\r\n  async addToCart(context, payload) {\r\n    context.state.isSending = true;\r\n    context.state.isSendingFailed = false;\r\n    context.state.isAdded = false;\r\n    try {\r\n      const { data } = await axios.post(`${ API_URL }/baskets/products`, payload, { params: { userAccessKey: context.state.userAccessKey } });\r\n      context.commit('updateCart', data.items);\r\n      context.commit('syncCartProducts');\r\n    } catch(err) {\r\n      context.state.isSendingFailed = true;\r\n    }\r\n    context.state.isSending = false;\r\n    context.state.isAdded = true;\r\n  },\r\n  async loadCart(context) {\r\n    context.state.isCartLoading = true;\r\n    context.state.isCartLoadingFailed = false;\r\n    try {\r\n      const { data } = await axios.get(`${ API_URL }/baskets`, { params: { userAccessKey: context.state.userAccessKey } });\r\n      if (!context.state.userAccessKey) {\r\n        localStorage.setItem('userAccessKey', data.user.accessKey);\r\n        context.commit('updateAccessKey', data.user.accessKey);\r\n      }\r\n      context.commit('updateCart', data.items);\r\n      context.commit('syncCartProducts');\r\n    } catch(err) {\r\n      context.state.isCartLoadingFailed = true;\r\n    } finally {\r\n      context.state.isCartLoading = false;\r\n    }\r\n  },\r\n  async deleteFromCart(context, payload) {\r\n    context.commit('deleteCartProduct', { productId: payload.productId });\r\n    try {\r\n      const { data } = await axios.delete(`${ API_URL }/baskets/products`, {\r\n        params: { userAccessKey: context.state.userAccessKey },\r\n        data: payload\r\n      });\r\n      context.commit('updateCart', data.items);\r\n    } catch(err) {\r\n      context.commit('syncCartProducts');\r\n    }\r\n  },\r\n  async sendOrder(context, payload) {\r\n    context.state.isSending = true;\r\n    context.state.isSendingFailed = false;\r\n    try {\r\n      context.commit('resetOrderError');\r\n      context.commit('resetFormErrorMessage');\r\n      const { data } = await axios.post(`${ API_URL }/orders`, payload, { params: { userAccessKey: context.state.userAccessKey } });\r\n      context.commit('updateOrderInfo', data);\r\n      context.commit('resetCart');\r\n      router.push({ name: 'orderInfo', params: { id: data.id} });\r\n    } catch(err) {\r\n      context.state.isSendingFailed = true;\r\n      context.commit('updateOrderError', err.response.data.error.request);\r\n      context.commit('updateOrderErrorMessage', err.response.data.error.message);\r\n    } finally {\r\n      context.state.isSending = false;\r\n    }\r\n  },\r\n  async loadOrderInfo(context, payload) {\r\n    context.state.isLoading = true;\r\n    context.state.isLoadingFailed = false;\r\n    try {\r\n      const { data } = await axios.get(`${ API_URL }/orders/${payload}`, { params: { userAccessKey: context.state.userAccessKey } });\r\n      context.commit('updateOrderInfo', data);\r\n    } catch(err) {\r\n      context.state.isLoadingFailed = true;\r\n    } finally {\r\n      context.state.isLoading = false;\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}